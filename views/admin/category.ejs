<%- include("../../views/partials/admin/header") %>
<head>
    <link rel="stylesheet"
    href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css"/>
    <style>
        .col-md-3 {
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 10px;
            margin: 10px;
        }
        .form-label {
            margin-bottom: 8px;
        }
        .form-control {
            width: 100%;
            padding: 8px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            box-sizing: border-box;
        }
        .d-grid {
            margin-top: 20px;
        }
        .btn-primary {
            background-color: #007bff;
            color: #fff;
            border: 1px solid #007bff;
            border-radius: 5px;
            padding: 10px 20px;
            cursor: pointer;
        }
        .btn-primary:hover {
            background-color: #0056b3;
            border-color: #0056b3;
        }
        .pagination-container {
            text-align: center;
        }
        .pagination {
            display: inline-block;
        }
        .pagination a,
        .pagination .current-page {
            display: inline-block;
            padding: 5px 10px;
            margin: 0 2px;
            border: 1px solid #ddd;
            text-decoration: none;
            color: #333;
        }
        .pagination a:hover {
            background-color: #f5f5f5;
        }
        .error-message {
            color: red;
        }
    </style>
</head>
<body>
    <section class="content-main">
        <div class="content-header">
            <div>
                <h2 class="content-title card-title">Category</h2>
            </div>
        </div>
        <header class="card-header text-center mb-20">
            <form action="/admin/category/" method="get" class="d-inline">
                <div class="input-group input-group-sm border border-1 border-grey rounded-pill"
                    style="width: 500px; margin-left: 230px">
                    <input type="text" class="form-control border-0 rounded-pill mt-3" placeholder="Search categories" name="search"/>
                    <button class="btn" type="submit">Search</button>
                </div>
            </form>
        </header>
        <div class="card">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-3">
                        <form method="post" action="/admin/addCategory" onsubmit="return handleFormSubmit(event)">
                            <div class="mb-4">
                                <label for="product_name" class="form-label">Name</label>
                                <input type="text" name="name" placeholder="Type here" class="form-control" id="product_name" required/>
                                <div id="name-error" class="error-message"></div>
                            </div>
                            <div class="mb-4">
                                <label class="form-label">Description</label>
                                <textarea placeholder="Type here" name="description" class="form-control" id="descriptionId" required></textarea>
                                <div id="description-error" class="error-message"></div>
                            </div>
                            <div class="d-grid">
                                <button class="btn btn-primary" type="submit">Create category</button>
                            </div>
                        </form>
                    </div>
                    <div class="col-md-8 ml-10">
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th class="text-center"></th>
                                        <th>Name</th>
                                        <th>Description</th>
                                        <th>Offer Price</th>
                                        <th>Offer</th>
                                        <th>Status</th>
                                        <th>List/Unlist</th>
                                        <th class="text-start">Edit</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% cat.reverse().forEach((category, index) => { %>
                                    <tr>
                                        <td></td>
                                        <td class="text-start"><%= category.name %></td>
                                        <td class="text-start"><%= category.description %></td>
                                        <td>
                                            <% if(category.categoryOffer) { %>
                                                <%= category.categoryOffer %>
                                            <% } else { %>
                                                0%
                                            <% } %>
                                        </td>
                                        <td class="text-start">
                                            <% if(category.categoryOffer === 0) { %>
                                            <button class="btn btn-info" style="width: 100px">
                                                <a href="#" class="text-white" onclick="addOffer('<%= category._id %>')">Add Offer</a>
                                            </button>
                                            <% } else { %>
                                            <button class="btn btn-info" style="width: 100px">
                                                <a href="#" class="text-white" onclick="removeOffer('<%= category._id %>')">Remove</a>
                                            </button>
                                            <% } %>
                                        </td>
                                        <td class="text-start">
                                            <span class="badge rounded-pill alert-success" style="width: 60px">Listed</span>
                                            <span class="badge rounded-pill alert-danger" style="width: 60px">Unlisted</span>
                                        </td>
                                        <td class="text-start">
                                            <button class="btn btn-danger" style="width: 70px">
                                                <a href="#" class="text-white">Unlist</a>
                                            </button>
                                            <button class="btn btn-success" style="width: 70px">
                                                <a href="" class="text-white">List</a>
                                            </button>
                                        </td>
                                        <td class="text-start">
                                            <a href="" class="btn btn-info text-white">Edit</a>
                                        </td>
                                    </tr>
                                    <% }) %>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="pagination-container">
            <% if (currentPage > 1) { %>
            <a href="?page=<%= currentPage - 1 %>">&laquo; Previous</a>
            <% } %> 
            <% for (let i = 1; i <= totalPages; i++) { %>
            <% if (i === currentPage) { %>
            <span class="current-page"><%= i %></span>
            <% } else { %>
            <a href="?page=<%= i %>"><%= i %></a>
            <% } %>
            <% } %>
            <% if (currentPage < totalPages) { %>
            <a href="?page=<%= currentPage + 1 %>">Next &raquo;</a>
            <% } %>
        </div>
    </section>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>

    <script>
        function handleFormSubmit(event) {
            event.preventDefault();
            if (!validateForm()) {
                return;
            }
            const name = document.getElementsByName('name')[0].value;
            const description = document.getElementById('descriptionId').value;

            fetch('/admin/addCategory', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ name, description })
            })
            .then(response => {
                if (!response.ok) {
                    return response.json().then(err => {
                        throw new Error(err.error);
                    });
                }
                return response.json();
            })
            .then(data => {
                location.reload();
            })
            .catch(error => {
                if (error.message === 'Category already exists') {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops',
                        text: 'Category already exists'
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops',
                        text: 'An error occurred'
                    });
                }
            });
        }

        function validateForm() {
            clearErrorMessages();
            const name = document.getElementsByName('name')[0].value.trim();
            const description = document.getElementById('descriptionId').value.trim();
            let isValid = true;

            if (name === '') {
                displayErrorMessage('name-error', 'Please enter a name');
                isValid = false;
            } else if (!/^[a-zA-Z\s]+$/.test(name)) {
                displayErrorMessage('name-error', 'Category name should contain only alphabetic characters');
                isValid = false;
            }

            if (description === '') {
                displayErrorMessage('description-error', 'Please give a description');
                isValid = false;
            }

            return isValid;
        }

        function displayErrorMessage(elementId, message) {
            var errorElement = document.getElementById(elementId);
            errorElement.innerText = message;
            errorElement.style.display = 'block';
        }

        function clearErrorMessages() {
            const errorElements = document.getElementsByClassName('error-message');
            Array.from(errorElements).forEach(function(element) {
                element.innerText = '';
                element.style.display = 'none';
            });
        }

        function addOffer(categoryId) {
            Swal.fire({
                title: 'Enter offer percentage',
                input: 'text',
                inputPlaceholder: 'Enter offer percentage',
                showCancelButton: true,
                confirmButtonText: 'Submit',
                preConfirm: (offerPercentage) => {
                    if (offerPercentage === '' || isNaN(offerPercentage) || offerPercentage <= 0 || offerPercentage >= 100) {
                        Swal.showValidationMessage('Please enter a valid offer percentage between 1 and 99.');
                        return false;
                    }
                    return offerPercentage;
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    const offerPercentage = result.value;
                    fetch(`/admin/addCategoryOffer/${categoryId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ offerPercentage })
                    }).then((response) => {
                        if (response.ok) {
                            location.reload();
                        } else {
                            throw new Error('Failed to add offer');
                        }
                    }).catch((error) => {
                        Swal.fire('Error', 'Failed to add offer', 'error');
                    });
                }
            });
        }

        function removeOffer(categoryId) {
            Swal.fire({
                title: 'Are you sure?',
                text: 'This action will remove the offer from this category.',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, remove it!',
                cancelButtonText: 'No, keep it'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/admin/removeCategoryOffer/${categoryId}`, {
                        method: 'POST'
                    }).then((response) => {
                        if (response.ok) {
                            location.reload();
                        } else {
                            throw new Error('Failed to remove offer');
                        }
                    }).catch((error) => {
                        Swal.fire('Error', 'Failed to remove offer', 'error');
                    });
                }
            });
        }
    </script>
</body>
<%- include("../../views/partials/admin/footer") %>
